---
stages:
  - name: "test"
  - name: "deploy-github"
    if: "tag IS present"
  - name: "deploy-pypi"
    if: "tag IS present"

language: "python"
python:
  - "3.6"
  - "3.7"
  - "3.8"

env:
  matrix:
    - "INVOKE_NAUTOBOT_NETBOX_IMPORTER_NAUTOBOT_VER=1.0.1"

services:
  - "docker"

# --------------------------------------------------------------------------
# Tests
# --------------------------------------------------------------------------
before_script:
  - "pip install invoke toml docker-compose poetry"
  - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USERNAME" --password-stdin || travis_terminate 1  # yamllint disable-line rule:quoted-strings
  - "cp development/creds.example.env development/creds.env"

script:
  - "INVOKE_NAUTOBOT_NETBOX_IMPORTER_PYTHON_VER=$TRAVIS_PYTHON_VERSION invoke build --no-cache"
  - "INVOKE_NAUTOBOT_NETBOX_IMPORTER_PYTHON_VER=$TRAVIS_PYTHON_VERSION invoke tests"

jobs:
  include:
    - stage: "deploy-github"
      before_script:
        - "pip install --upgrade pip"
        - "pip install poetry"
      script:
        - "poetry version $TRAVIS_TAG"
        - "poetry build"
      deploy:
        provider: "releases"
        api_key: "$GITHUB_AUTH_TOKEN"
        file_glob: true
        file: "dist/*"
        skip_cleanup: true
        "on":
          all_branches: true

    - stage: "deploy-pypi"
      before_script:
        - "pip install --upgrade pip"
        - "pip install poetry"
      script:
        - "echo Deploying the release to PyPI"
        - "poetry version $TRAVIS_TAG"
      deploy:
        provider: "script"
        skip_cleanup: true
        script: "poetry publish --build -u __token__ -p $PYPI_TOKEN"
        "on":
          all_branches: true
